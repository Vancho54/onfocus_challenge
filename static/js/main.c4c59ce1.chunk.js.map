{"version":3,"sources":["state/features/alertSlice.js","state/features/taskSlice.js","state/features/authSlice.js","state/store.js","state/actions/alertActions.js","state/actions/authActions.js","components/auth/Login.jsx","components/routes/PrivateRoute.jsx","state/actions/taskActions.js","components/tasks/EditTask.jsx","components/tasks/Task.jsx","components/tasks/AddTask.jsx","components/tasks/Tasks.jsx","App.js","reportWebVitals.js","index.js"],"names":["alertSlice","createSlice","name","initialState","show","msg","reducers","showAlert","state","action","payload","hideAlert","_action","selectAlert","alert","actions","TaskSlice","page","take","data","setData","changeTaskState","map","d","id","completed","editTask","i","addTask","unshift","deleteTask","filter","upPage","Math","ceil","length","downPage","selectTask","task","authSlice","auth","login","selectAuth","Store","configureStore","reducer","taskReducer","authReducer","alertReducer","alertActions","message","dispatch","setTimeout","authActions","setToken","Login","props","useSelector","console","log","useEffect","history","push","useState","email","password","loginInfo","setLoginInfo","handleChange","event","target","value","className","Card","CardContent","onSubmit","preventDefault","process","FormLabel","FormControl","TextField","label","type","onChange","Button","variant","jsx","PrivateRoute","Component","component","render","to","taskActions","editedTask","newTask","taskId","EditTask","handleClose","setEditTask","title","Task","open","setOpen","EditOutlined","onClick","style","cursor","DeleteOutlined","CheckBoxOutlined","CheckBoxOutlineBlankOutlined","Modal","onClose","AddTask","uuidv4","setNewTask","Tasks","tasks","fetch","then","response","json","slice","TransitionGroup","CSSTransition","timeout","classNames","KeyboardArrowLeftRounded","KeyboardArrowRightRounded","App","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.c4c59ce1.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst initialState = {\r\n    show: false,\r\n    msg: ''\r\n}\r\n\r\nconst alertSlice = createSlice({\r\n    name:'alert',\r\n    initialState,\r\n    reducers: {\r\n        showAlert: (state, action) => {\r\n            state.show = true\r\n            state.msg = action.payload\r\n        },\r\n\r\n        hideAlert: (state, _action) => {\r\n            state.show = false\r\n            state.msg = ''\r\n        }\r\n    }\r\n})\r\n\r\nexport const selectAlert = state => state.alert\r\n\r\nexport const { showAlert, hideAlert } = alertSlice.actions;\r\nexport default alertSlice.reducer;","import { createSlice } from '@reduxjs/toolkit';\r\n\r\n\r\nexport const TaskSlice = createSlice({\r\n    name:'task',\r\n    initialState: {\r\n        page: 1,\r\n        take: 6,\r\n        data: []\r\n    },\r\n    reducers: {\r\n\r\n        setData: (state, action) => {\r\n            state.data = action.payload\r\n        },\r\n\r\n        changeTaskState: (state, action) => {\r\n            state.data.map((d) => (\r\n                d.id === action.payload ? d.completed = !d.completed : null\r\n            ))\r\n        },\r\n\r\n        editTask: (state, action) => {\r\n            state.data.map((d, i) => d.id === action.payload.id ? state.data[i] = action.payload : null)\r\n        },\r\n\r\n        addTask: (state, action) => {\r\n            state.data.unshift(action.payload)\r\n        },\r\n\r\n        deleteTask: (state, action) => {\r\n            state.data = state.data.filter((d) => (\r\n                d.id !== action.payload\r\n            ))\r\n        },\r\n\r\n        upPage: (state) => {\r\n            if (state.page !== Math.ceil(state.data.length / state.take))\r\n            state.page = state.page + 1 \r\n        },\r\n\r\n        downPage: (state) => {\r\n            if (state.page !== 1) {\r\n                state.page = state.page - 1\r\n            }\r\n        }\r\n    }\r\n})\r\n\r\nexport const selectTask = (state) => state.task;\r\n\r\nexport const { setData, changeTaskState, deleteTask, addTask, editTask, downPage, upPage } = TaskSlice.actions;\r\nexport default TaskSlice.reducer;","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst initialState = {\r\n    auth: null\r\n}\r\n\r\nconst authSlice = createSlice({\r\n    name:'auth',\r\n    initialState,\r\n    reducers: {\r\n        login: (state, _action) => {\r\n            state.auth = true\r\n        }\r\n    }\r\n})\r\n\r\nexport const selectAuth = state => state.auth.auth\r\n\r\nexport const { login } = authSlice.actions;\r\nexport default authSlice.reducer;","import { configureStore } from '@reduxjs/toolkit';\r\nimport taskReducer from './features/taskSlice';\r\nimport authReducer from './features/authSlice';\r\nimport alertReducer from './features/alertSlice'\r\n\r\nconst Store = configureStore({\r\n    reducer: {\r\n        task: taskReducer,\r\n        auth: authReducer,\r\n        alert: alertReducer\r\n    }\r\n});\r\n\r\nexport default Store","import * as alert from '../features/alertSlice';\r\nimport Store from '../store';\r\n\r\nconst alertActions = {\r\n\r\n    showAlert: (message) => {\r\n        Store.dispatch(alert.showAlert(message))\r\n        setTimeout(() => {\r\n            Store.dispatch(alert.hideAlert())\r\n        }, 2000)\r\n    }\r\n}\r\n\r\nexport default alertActions;\r\n","import * as auth from '../features/authSlice';\r\nimport Store from '../store';\r\n\r\nconst authActions = {\r\n\r\n    setToken: () => {\r\n        Store.dispatch(auth.login())\r\n    }\r\n}\r\n\r\nexport default authActions;\r\n\r\n","import { \r\n    Card, \r\n    CardContent, \r\n    TextField, \r\n    Button, \r\n    FormControl, \r\n    FormLabel \r\n} from '@material-ui/core';\r\nimport { useEffect } from 'react';\r\nimport { useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport alertActions from '../../state/actions/alertActions';\r\nimport authActions from '../../state/actions/authActions';\r\nimport { selectAlert } from '../../state/features/alertSlice';\r\nimport { selectAuth } from '../../state/features/authSlice';\r\n\r\n\r\nexport const Login = (props) => {\r\n\r\n    const auth = useSelector(selectAuth);\r\n    const alert = useSelector(selectAlert);\r\n\r\n    console.log(alert)\r\n\r\n    useEffect(() => {\r\n        if (auth) {\r\n            props.history.push('/tasks')\r\n        }\r\n    }, [auth, props.history])\r\n\r\n\r\n    const [loginInfo, setLoginInfo] = useState({\r\n        email: '',\r\n        password: ''\r\n    })\r\n\r\n    const { email, password } = loginInfo\r\n\r\n    const handleChange = event => {\r\n        setLoginInfo({\r\n            ...loginInfo,\r\n            [event.target.name]: event.target.value\r\n        })\r\n    }\r\n\r\n    const handleSubmit = event => {\r\n        event.preventDefault()\r\n        if (email === process.env.REACT_APP_USER && password === process.env.REACT_APP_PASS) {\r\n            authActions.setToken()\r\n        } else {\r\n            alertActions.showAlert('Incorrect password or user')\r\n        }\r\n    }\r\n\r\n    return(\r\n        <div className='mainContainer'>\r\n            {alert.show ? <div className='error'>{alert.msg}</div> : null}\r\n            <Card className='container'>\r\n                <CardContent>\r\n                    <form onSubmit={handleSubmit}>\r\n                        <FormLabel className='formLabel'>Login</FormLabel>\r\n                        <FormControl className='formBox'>\r\n                            <TextField \r\n                                name='email'\r\n                                label='Email'\r\n                                type='email'\r\n                                onChange={handleChange}\r\n                                value={email}\r\n                            />\r\n                        </FormControl>\r\n                        <FormControl className='formBox'>\r\n                            <TextField \r\n                                name='password'\r\n                                label='Password'\r\n                                type='password'\r\n                                onChange={handleChange}\r\n                                value={password}\r\n                            />\r\n                        </FormControl>\r\n                        <FormControl className='formBox'>\r\n                            <Button className='button' type='submit' variant='contained'>Login</Button>\r\n                        </FormControl>\r\n                    </form>\r\n                </CardContent>\r\n            </Card>\r\n            <div className='circle-1'></div>\r\n            <div className='circle-2'></div>\r\n            <style jsx>\r\n                {`\r\n                    .mainContainer {\r\n                        display: flex;\r\n                        max-width: 50vw;\r\n                        min-width: 25vw;\r\n                        min-height: 50vh;\r\n                    }\r\n\r\n                    .container {\r\n                        background: white;\r\n                        min-height: 40vh;\r\n                        width: 90%;\r\n                        background: linear-gradient(to right bottom, rgba(255, 255, 255, 0.7), rgba(255, 255, 255, 0.3));\r\n                        border-radius: 2rem;\r\n                        z-index: 4;\r\n                        backdrop-filter: blur(2rem);\r\n                        display: flex;\r\n                        align-content: center;\r\n                        justify-content: center;\r\n                    }\r\n\r\n                    .button {\r\n                        display: flex;\r\n                        text-align: justify;\r\n                        margin: 0px 15px 0px 15px;\r\n                        box-sizing: border-box;\r\n                        background: linear-gradient(to right top, rgb(109, 218, 226, 0.7), rgb(109, 218, 226, 0.3));\r\n                        border: none;\r\n                        width: 70%;\r\n                        margin-top: 1rem;\r\n                        height: 2rem;\r\n                        border-radius: 0.5rem;\r\n                        font-size: 1.2rem;\r\n                    }\r\n\r\n                    .formBox {\r\n                        display: flex;\r\n                        margin-top: 30px;\r\n                    }\r\n\r\n                    .formLabel {\r\n                        padding-top: 30px;\r\n                    }\r\n                `}\r\n            </style>\r\n        </div>\r\n    )\r\n}","import { useSelector } from 'react-redux';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { selectAuth } from '../../state/features/authSlice';\r\n\r\nconst PrivateRoute = ({ component: Component, ...props }) => {\r\n\r\n    const auth = useSelector(selectAuth)\r\n\r\n    return (\r\n        <Route {...props} render={ props => !auth ? \r\n            (<Redirect to='/' />)\r\n            :\r\n            (<Component {...props}/>\r\n        )}/>\r\n    )\r\n}\r\n\r\nexport default PrivateRoute","import * as task from '../features/taskSlice';\r\nimport Store from '../store';\r\n\r\n\r\nconst taskActions = {\r\n\r\n    editTask: (editedTask) => {\r\n        Store.dispatch(task.editTask(editedTask))\r\n    },\r\n\r\n    addTask: (newTask) => {\r\n        Store.dispatch(task.addTask(newTask))\r\n    },\r\n\r\n    setData: (data) => {\r\n        Store.dispatch(task.setData(data))\r\n    },\r\n\r\n    deleteTask: (taskId) => {\r\n        Store.dispatch(task.deleteTask(taskId))\r\n    },\r\n\r\n    changeTaskState: (taskId) => {\r\n        Store.dispatch(task.changeTaskState(taskId))\r\n    },\r\n\r\n    upPage: () => {\r\n        Store.dispatch(task.upPage())\r\n    },\r\n\r\n    downPage: () => {\r\n        Store.dispatch(task.downPage())\r\n    }\r\n}\r\n\r\nexport default taskActions;","import { \r\n    Card, \r\n    CardContent, \r\n    TextField, \r\n    Button, \r\n    FormControl, \r\n    FormLabel \r\n} from '@material-ui/core';\r\nimport { useState } from 'react';\r\nimport taskActions from '../../state/actions/taskActions'\r\n\r\n\r\nconst EditTask = ({ task, handleClose }) => {\r\n\r\n    const [editTask, setEditTask] = useState(task);\r\n\r\n    const { title } = editTask;\r\n\r\n    const handleChange = event => {\r\n        setEditTask({\r\n            ...editTask,\r\n            [event.target.name]: event.target.value\r\n        });\r\n    }\r\n\r\n    const handleSubmit = event => {\r\n        event.preventDefault();\r\n        taskActions.editTask(editTask);\r\n        handleClose();\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Card className='containerEdit'>\r\n                <CardContent>\r\n                    <form onSubmit={handleSubmit}>\r\n                        <FormLabel className='formLabel'>Edit Task</FormLabel>\r\n                        <FormControl className='formBox'>\r\n                            <TextField \r\n                                name='title'\r\n                                label='Title'\r\n                                type='text'\r\n                                onChange={handleChange}\r\n                                value={title}\r\n                            />\r\n                        </FormControl>\r\n                        <FormControl>\r\n                            <Button className='buttonEdit'type='submit' variant='contained'>Edit</Button>\r\n                        </FormControl>\r\n                    </form>\r\n                </CardContent>\r\n            </Card>\r\n            <style jsx>\r\n                {`\r\n                    .containerEdit {\r\n                        display: flex;\r\n                        background: linear-gradient(to right bottom, rgba(255, 255, 255, 0.6), rgba(255, 255, 255, 0.1));\r\n                        border-radius: 1rem;\r\n                        z-index: 4;\r\n                        backdrop-filter: blur(2rem);\r\n                        flex-direction: row;\r\n                        align-items: center;\r\n                        justify-content: center;\r\n                        position: absolute;\r\n                        top: 50%;\r\n                        left: 50%;\r\n                        transform: translate(-50%, -50%);\r\n                        min-width: 300px;\r\n                        min-height: 200px;\r\n                    }\r\n\r\n                    .buttonEdit {\r\n                        display: flex;\r\n                        text-align: justify;\r\n                        margin: 0px 15px 0px 15px;\r\n                        box-sizing: border-box;\r\n                        background: linear-gradient(to right top, rgb(109, 218, 226, 0.7), rgb(109, 218, 226, 0.3));\r\n                        border: none;\r\n                        border-radius: 0.5rem;\r\n                        width: 100%;\r\n                    }\r\n\r\n                    .formBox {\r\n                        display: flex;\r\n                        margin-top: 20px;\r\n                        margin-bottom: 20px;\r\n                    }\r\n\r\n                    .formLabel {\r\n                        padding-top: 20px;\r\n                    }\r\n                `}\r\n            </style>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EditTask;","import { CheckBoxOutlineBlankOutlined, CheckBoxOutlined, DeleteOutlined, EditOutlined } from '@material-ui/icons';\r\nimport taskActions from '../../state/actions/taskActions';\r\nimport { Modal } from '@material-ui/core'\r\nimport { useState } from 'react';\r\nimport EditTask from './EditTask'\r\n\r\nconst Task = ({task}) => {\r\n\r\n    const [open, setOpen] = useState(false)\r\n    const handleOpen = () => setOpen(true)\r\n    const handleClose = () => setOpen(false)\r\n\r\n    return(\r\n        <div className='taskCard'>\r\n            <div>\r\n               <p>{task.title}</p>\r\n            </div>\r\n            <div className='optionsContainer'>\r\n                <div>\r\n                    <EditOutlined onClick={handleOpen} style={{cursor: 'pointer'}}/>\r\n                </div>\r\n                <div onClick={() => taskActions.deleteTask(task.id)}>\r\n                    <DeleteOutlined style={{cursor: 'pointer'}}/>\r\n                </div>\r\n                <div onClick={() => taskActions.changeTaskState(task.id)}>\r\n                    {task.completed ? <CheckBoxOutlined style={{cursor: 'pointer'}}/>\r\n                    :\r\n                    <CheckBoxOutlineBlankOutlined style={{cursor: 'pointer'}}/>\r\n                    }\r\n                </div>\r\n                <Modal\r\n                    open={open}\r\n                    onClose={handleClose}\r\n                >\r\n                    <EditTask task={task} handleClose={handleClose} />\r\n                </Modal>\r\n            </div>\r\n            <style jsx>\r\n                {`\r\n                    .taskCard {\r\n                        display: flex;\r\n                        padding: 0px 30px 0px 15px;\r\n                        margin: 5px 0px 0px 0px;\r\n                        width: 500px;\r\n                        height: 80px;\r\n                        background: linear-gradient(to right bottom, rgba(255, 255, 255, 0.7), rgba(255, 255, 255, 0.3));\r\n                        border-radius: 1rem;\r\n                        backdrop-filter: blur(2rem);\r\n                        flex-direction: row;\r\n                        align-items: center;\r\n                        justify-content: space-between;\r\n                    }\r\n\r\n                    .optionsContainer {\r\n                        display: flex;\r\n                        align-items: center;\r\n                        padding: 0px 5px 0px 5px;\r\n                        justify-content: space-between;\r\n                    }\r\n                `}\r\n            </style>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Task;","import { \r\n    Card, \r\n    CardContent, \r\n    TextField, \r\n    Button, \r\n    FormControl, \r\n    FormLabel \r\n} from '@material-ui/core';\r\nimport { useState } from 'react';\r\nimport taskActions from '../../state/actions/taskActions'\r\nimport { v4 as uuidv4 } from 'uuid'\r\n\r\n\r\nconst AddTask = () => {\r\n\r\n    const [newTask, setNewTask] = useState({\r\n        title: '',\r\n        completed: false,\r\n        id: uuidv4()\r\n    })\r\n\r\n    const { title } = newTask;\r\n\r\n    const handleChange = event => {\r\n        setNewTask({\r\n            ...newTask,\r\n            [event.target.name]: event.target.value\r\n        })\r\n    }\r\n\r\n    const handleSubmit = event => {\r\n        event.preventDefault()\r\n        taskActions.addTask(newTask)\r\n        setNewTask({\r\n            title: '',\r\n            id: uuidv4(),\r\n            completed: false\r\n        })\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Card className='container'>\r\n                <CardContent>\r\n                    <form onSubmit={handleSubmit}>\r\n                        <FormLabel className='formLabel'>Add a new task</FormLabel>\r\n                        <FormControl className='formBox'>\r\n                            <TextField \r\n                                name='title'\r\n                                label='Title'\r\n                                type='text'\r\n                                onChange={handleChange}\r\n                                value={title}\r\n                            />\r\n                        </FormControl>\r\n                        <FormControl>\r\n                            <Button className='button' type='submit' variant='contained'>Add new task</Button>\r\n                        </FormControl>\r\n                    </form>\r\n                </CardContent>\r\n            </Card>\r\n            <style jsx>\r\n                {`\r\n                    .container {\r\n                        background: linear-gradient(to right bottom, rgba(255, 255, 255, 0.7), rgba(255, 255, 255, 0.3));\r\n                        border-radius: 2rem;\r\n                        z-index: 2;\r\n                        backdrop-filter: blur(2rem);\r\n                        display: flex;\r\n                    }\r\n\r\n                    .button {\r\n                        display: flex;\r\n                        text-align: justify;\r\n                        align-content: center;\r\n                        margin: 0px 15px 0px 15px;\r\n                        box-sizing: border-box;\r\n                        background: linear-gradient(to right top, rgb(109, 218, 226, 0.7), rgb(109, 218, 226, 0.3));\r\n                        border: none;\r\n                        border-radius: 0.5rem;\r\n                    }\r\n\r\n                    .formBox {\r\n                        display: flex;\r\n                        margin-top: 20px;\r\n                        margin-bottom: 20px;\r\n                    }\r\n\r\n                    .formLabel {\r\n                        padding-top: 20px;\r\n                    }\r\n                `}\r\n            </style>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddTask;","import { useEffect } from \"react\"\r\nimport { useSelector } from \"react-redux\"\r\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\"\r\nimport { selectTask } from \"../../state/features/taskSlice\"\r\nimport taskActions from '../../state/actions/taskActions'\r\nimport { Button } from '@material-ui/core'\r\nimport { KeyboardArrowLeftRounded, KeyboardArrowRightRounded } from '@material-ui/icons'\r\n\r\nimport Task from './Task'\r\nimport AddTask from \"./AddTask\"\r\n\r\nconst Tasks = () => {\r\n\r\n    const tasks = useSelector(selectTask);\r\n\r\n    useEffect(() => {\r\n        fetch(process.env.REACT_APP_URI)\r\n            .then(response => response.json())\r\n            .then(data => taskActions.setData(data))\r\n    }, [])\r\n\r\n    console.log(tasks.data.slice((tasks.page - 1) * tasks.take, tasks.take * tasks.page))\r\n\r\n    return(\r\n        <div className='wrapper'>\r\n            <div className='mainContainer'>\r\n                <div className='formContainer'>\r\n                    <AddTask />\r\n                </div>\r\n                <div className='taskContainer'>\r\n                    <ul>\r\n                        {tasks.data.length === 0 ? <li><p>No tasks available</p></li> \r\n                        :\r\n                        <TransitionGroup>\r\n                                {tasks.data.slice((tasks.page - 1) * tasks.take, tasks.take * tasks.page).map((task) => (\r\n                                <CSSTransition\r\n                                    key={task.id}\r\n                                    timeout={300}\r\n                                    classNames='task'\r\n                                >\r\n                                    <Task \r\n                                        task={task}\r\n                                    />\r\n                                </CSSTransition>\r\n                            ))}\r\n                        </TransitionGroup>\r\n                        }\r\n                    </ul>\r\n                    <div className='arrowContainer'>\r\n                        <Button className='buttonArrow' variant='contained' onClick={taskActions.downPage}>\r\n                            <KeyboardArrowLeftRounded/>\r\n                            <p>Prev</p>\r\n                        </Button>\r\n                        <div>\r\n                            <p>{tasks.page}</p>\r\n                        </div>\r\n                        <Button className='buttonArrow' variant='contained' onClick={taskActions.upPage}>\r\n                            <p>Next</p>\r\n                            <KeyboardArrowRightRounded/>\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className='circle-1'></div>\r\n            <div className='circle-2'></div>\r\n                <style jsx>\r\n                    {`\r\n                    .arrowContainer {\r\n                        display: flex;\r\n                        justify-content: center;\r\n                        align-items: center;\r\n                        text-align: center;\r\n                    } \r\n                        \r\n                    .buttonArrow {\r\n                        display: flex;\r\n                        text-align: justify;\r\n                        margin-left:15px;\r\n                        margin-right: 15px;\r\n                        max-height: 40px;\r\n                        box-sizing: border-box;\r\n                        background: linear-gradient(to right top, rgb(109, 218, 226, 0.7), rgb(109, 218, 226, 0.3));\r\n                        border: none;\r\n                        border-radius: 0.5rem;\r\n                    }\r\n\r\n                    .wrapper {\r\n                        display: flex;\r\n                        flex-direction: column;\r\n                    }\r\n\r\n                    .taskContainer {\r\n                        display: flex;\r\n                        flex-direction: column;\r\n                        max-height: 500px;\r\n\r\n                    }\r\n\r\n                    .mainContainer {\r\n                        display: flex;\r\n                        padding: 0px 30px 0px 15px;\r\n                        margin: 5px 0px 0px 0px;\r\n                        max-width: 900px;\r\n                        min-height: 600px;\r\n                        background: linear-gradient(to right bottom, rgba(255, 255, 255, 0.9), rgba(255, 255, 255, 0.3));\r\n                        border-radius: 1rem;\r\n                        z-index: 4;\r\n                        backdrop-filter: blur(2rem);\r\n                        flex-direction: row;\r\n                        justify-content: space-between;\r\n                    }\r\n\r\n                    .formContainer {\r\n                        display: flex;\r\n                        flex-direction: column;\r\n                        margin-top: 16px;\r\n                    }\r\n\r\n                    .task-enter {\r\n                        opacity: 0;\r\n                    }\r\n                    .task-enter-active {\r\n                        opacity: 1;\r\n                        transition: opacity 300ms;\r\n                    }\r\n\r\n                    .task-exit {\r\n                        opacity: 1\r\n                    }\r\n\r\n                    .task-exit-active {\r\n                        opacity: 0;\r\n                        transition: opacity 300ms\r\n                    }\r\n                `}\r\n            </style>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Tasks;","import './App.css';\nimport { Login } from './components/auth/Login';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\nimport PrivateRoute from './components/routes/PrivateRoute';\nimport Tasks from './components/tasks/Tasks';\n\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route exact path='/' component={Login} />\n        <PrivateRoute exact path='/tasks' component={Tasks}/>\n      </Switch>\n    </Router>\n  );\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport Store from './state/store'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={Store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}